README

 .--.         .     
:    :        |     
|    |.--. .-.| .--.
:    ;|   (   | |   
 `--' '    `-'`-'   
                    
(ascii art by patorjk.cm, font: swan)


ORDR
Trck yr ordrs wth ordr.
"The Netflix of tracking your orders" --someone, probably
On New York Times Best Sellers Book List
'"Do you think a depressed person could make this?' -- Ben Wyatt, Parks and Recreation" --Me
Blockchain

The Rationale
I currently work at an ophthalmology clinic and, like every other medical provider at this time, we struggle to keep an adeqaute supply of medical supplies and PPE. My best friend is tasked with finding companies to order from, placing ample orders, keeping track of these orderes, and distributing supplies to our 11 offices. While she uses printed documents/spreadsheets and carbon copies of her purchase orders (organized neatly in ~several~ binders) I believe we can further streamline this process. This is my attempt to make her life easier.

The Project
This project creates, tracks, and stores orders and their status from the command line. I have created classes to meet these needs and I intend to implement a SQL database to display her orders in interesting and informative ways (e.g. all orders within the past three months, orders containing certain eye drops, etc). A  final step would be to implement a very simple GUI for the ease of the user.

Technologies
C (because I hate myself) and in the future a SQL database. I will likey use GTK for creating the GUI though I will research my options more thoroughly after I have made headway with implementing the database.

Initially I considered using an array but valued expanding the list at will over speed of searching items.
    
                  Search   Insert/Delete(beginning/end)  Insert/Delete(middle)
    Linked List    O(n)     O(1)                          O(n)
    Array          O(n)     O(n)                          O(n)
    
    * Note insertion for array is based on having to allocate memory for larger array and copy data into new array
    * I considered the various implementations of a linked list (circular and doubly linked) and opted for a singly linked list for ease of implementation. 

Problems
1. I do not have experience using a database with another programming language. In my database class we worked only with files of SQL queries. I anticipate challenges setting up the database, implementing it with C, and writing complex queries to display information.
2. I hate front end development and will be quite displeased to implement at GUI.
3. I have very little experience with OOP.

Installation
Don't install at this time, nothing much to look at yet.

What I've Learned (so far)
* static vs. nonstatic methods
* public vs. private fields and methods--DNE in C :(
* implementing OOP in C
* 